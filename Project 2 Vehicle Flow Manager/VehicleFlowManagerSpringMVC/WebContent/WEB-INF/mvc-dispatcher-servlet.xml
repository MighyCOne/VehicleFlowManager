<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:component-scan base-package="com.controller" />
	<context:component-scan base-package="com.restprovider" />
	
	<mvc:annotation-driven />
	
	<!-- <mvc:resources location="/resources/" mapping="/resources/**" /> -->

	<!-- All the viewResolver bean does is map a logical name for the next view 
		to an actual resource on the server. It puts "pages" on the front and ".jsp" 
		on the back to a response. Change it to match your output technology, like 
		html. -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">

		<property name="prefix">
			<value>/pages/</value> <!-- This can be named whatever I want -->
		</property>

		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- This is where you'd change the language. Gives the name for the output 
		messages file. -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages"></property>
	</bean>

</beans>
